(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{619:function(n,e,a){"use strict";a.r(e);var t=a(6),o=Object(t.a)({},(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",[n._v("简洁的代码生成工具")])]),n._v(" "),a("h2",{attrs:{id:"entity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entity"}},[n._v("#")]),n._v(" Entity")]),n._v(" "),a("p",[a("strong",[n._v("需要自己建一个BaseEntity类")])]),n._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Data")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("BaseEntity")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 唯一id\n     */")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Long")]),n._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n    * 创建时间\n    */")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("String")]),n._v(" createTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 更新时间\n     */")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("String")]),n._v(" updateTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 状态\n     */")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Integer")]),n._v(" status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])])]),a("div",{staticClass:"language-config extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('##引入宏定义\n$!define\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save("/entity", "Entity.java")\n\n##使用宏定义设置包后缀\n#setPackageSuffix("entity")\n\n##使用全局变量实现默认包导入\n$!autoImport\nimport java.io.Serializable;\n\n##使用宏定义实现类注释信息\n#tableComment("实体类")\npublic class $!{tableInfo.name}Entity extends BaseEntity implements Serializable {\n    private static final long serialVersionUID = $!tool.serial();\n#foreach($column in $tableInfo.fullColumn)\n#if($!{column.name} != "createTime" && $!{column.name} != "updateTime" && $!{column.name} != "status" && $!{column.name} != "id")\n    #if(${column.comment})/**\n    * ${column.comment}\n    */#end\n\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};#end\n#if($!{column.name} != "createTime" && $!{column.name} != "updateTime" && $!{column.name} != "status" && $!{column.name} != "id")\n\n#end\n#end\n\n#foreach($column in $tableInfo.fullColumn)\n#if($!{column.name} != "createTime" && $!{column.name} != "updateTime" && $!{column.name} != "status" && $!{column.name} != "id")\n##使用宏定义实现get,set方法\n#getSetMethod($column)#end\n#end\n\n}\n')])])]),a("p",[a("strong",[n._v("lombook版本")])]),n._v(" "),a("div",{staticClass:"language-config extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('##引入宏定义\n$!define\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save("/entity", "Entity.java")\n\n##使用宏定义设置包后缀\n#setPackageSuffix("entity")\n\n##使用全局变量实现默认包导入\n$!autoImport\nimport java.io.Serializable;\nimport lombok.*;\n\n##使用宏定义实现类注释信息\n#tableComment("实体类")\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@EqualsAndHashCode(callSuper = true)\n@ToString(callSuper = true)\npublic class $!{tableInfo.name}Entity extends BaseEntity implements Serializable {\n\n    private static final long serialVersionUID = $!tool.serial();\n#foreach($column in $tableInfo.fullColumn)\n#if($!{column.name} != "createTime" && $!{column.name} != "updateTime" && $!{column.name} != "status" && $!{column.name} != "id")\n\n    #if(${column.comment})/**\n    * ${column.comment}\n    */#end\n\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};#end\n#if($!{column.name} != "createTime" && $!{column.name} != "updateTime" && $!{column.name} != "status" && $!{column.name} != "id")\n\n#end\n#end\n}\n')])])]),a("h2",{attrs:{id:"dao"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dao"}},[n._v("#")]),n._v(" Dao")]),n._v(" "),a("div",{staticClass:"language-config extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('##定义初始变量\n#set($tableName = $tool.append("I",$tableInfo.name, "Dao"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, ".java"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, "/dao"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity;\nimport org.apache.ibatis.annotations.Param;\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层\n *\n * @author $!author\n * @since $!time.currTime()\n */\npublic interface $!{tableName} {\n\n    /**\n     * 通过ID查询单条数据\n     *\n     * @param $!pk.name 主键\n     * @return 实例对象\n     */\n    $!{tableInfo.name}Entity queryById($!pk.shortType $!pk.name);\n\n    /**\n     * 查询所有数据\n     *\n     * @return 对象列表\n     */\n    List<$!{tableInfo.name}Entity> queryAll();\n\n    /**\n     * 通过实体作为筛选条件查询\n     *\n     * @param $!tool.firstLowerCase($!{tableInfo.name})Entity 实例对象\n     * @return 对象列表\n     */\n    List<$!{tableInfo.name}Entity> queryByCondition($!{tableInfo.name}Entity $!tool.firstLowerCase($!{tableInfo.name})Entity);\n\n    /**\n     * 新增数据\n     *\n     * @param $!tool.firstLowerCase($!{tableInfo.name})Entity 实例对象\n     * @return 影响行数\n     */\n    int insert($!{tableInfo.name}Entity $!tool.firstLowerCase($!{tableInfo.name})Entity);\n\n    /**\n     * 修改数据\n     *\n     * @param $!tool.firstLowerCase($!{tableInfo.name})Entity 实例对象\n     * @return 影响行数\n     */\n    int update($!{tableInfo.name}Entity $!tool.firstLowerCase($!{tableInfo.name})Entity);\n\n    /**\n     * 通过主键删除数据\n     *\n     * @param $!pk.name 主键\n     * @return 影响行数\n     */\n    int deleteById($!pk.shortType $!pk.name);\n}\n')])])]),a("h2",{attrs:{id:"mapper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mapper"}},[n._v("#")]),n._v(" Mapper")]),n._v(" "),a("div",{staticClass:"language-config extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('##引入mybatis支持\n$!mybatisSupport\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, "Dao.xml"))\n$!callback.setSavePath($tool.append($modulePath, "/src/main/resources/mapper"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">\n<mapper namespace="$!{tableInfo.savePackageName}.dao.I$!{tableInfo.name}Dao">\n\n    <resultMap id="BaseResultMap" type="$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity">\n#foreach($column in $tableInfo.fullColumn)\n        <result property="$!column.name" column="$!column.obj.name"/>\n#end\n    </resultMap>\n    \n    <sql id="BaseResultSql">\n        #allSqlColumn()\n\n    </sql>\n\n    \x3c!--查找所有--\x3e\n    <select id="queryAll" resultMap="BaseResultMap">\n        select\n        <include refid="BaseResultSql"/>\n        from $!tableInfo.obj.name order by create_time desc\n    </select>\n\n    \x3c!--查询单个--\x3e\n    <select id="queryById" resultMap="BaseResultMap">\n        select\n        <include refid="BaseResultSql"/>\n        from $!tableInfo.obj.name\n        where $!pk.obj.name = #{$!pk.name}\n    </select>\n\n    \x3c!--新增--\x3e\n    <insert id="insert" keyProperty="$!pk.name" useGeneratedKeys="true">\n        insert into $!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)\n        values (#foreach($column in $tableInfo.otherColumn)#{$!{column.name}}#if($velocityHasNext), #end#end)\n    </insert>\n\n    \x3c!--通过主键修改数据--\x3e\n    <update id="update">\n        update $!{tableInfo.obj.name}\n        <set>\n#foreach($column in $tableInfo.otherColumn)\n            <if test="$!column.name != null#if($column.type.equals("java.lang.String")) and $!column.name != \'\'#end">\n                $!column.obj.name = #{$!column.name},\n            </if>\n#end\n        </set>\n        where $!pk.obj.name = #{$!pk.name}\n    </update>\n\n    \x3c!--通过主键删除--\x3e\n    <delete id="deleteById">\n        delete from $!{tableInfo.obj.name} where $!pk.obj.name = #{$!pk.name}\n    </delete>\n</mapper>\n')])])]),a("h2",{attrs:{id:"service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service"}},[n._v("#")]),n._v(" Service")]),n._v(" "),a("div",{staticClass:"language-config extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('##定义初始变量\n#set($tableName = $tool.append("I",$tableInfo.name, "Service"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, ".java"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, "/service"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity;\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表服务接口\n *\n * @author $!author\n * @since $!time.currTime()\n */\npublic interface $!{tableName} {\n\n    /**\n     * 通过ID查询单条数据\n     *\n     * @param $!pk.name 主键\n     * @return 实例对象\n     */\n    $!{tableInfo.name}Entity queryById($!pk.shortType $!pk.name);\n\n    \n    /**\n     * 查询所有数据\n     * @return 对象列表\n     */\n    List<$!{tableInfo.name}Entity> queryAll();\n\n    /**\n     * 新增数据\n     *\n     * @param $!tool.firstLowerCase($!{tableInfo.name})Entity 实例对象\n     * @return 实例对象\n     */\n    int insert($!{tableInfo.name}Entity $!tool.firstLowerCase($!{tableInfo.name})Entity);\n\n    /**\n     * 修改数据\n     *\n     * @param $!tool.firstLowerCase($!{tableInfo.name})Entity 实例对象\n     * @return 实例对象\n     */\n    int update($!{tableInfo.name}Entity $!tool.firstLowerCase($!{tableInfo.name})Entity);\n\n    /**\n     * 通过主键删除数据\n     *\n     * @param $!pk.name 主键\n     * @return 是否成功\n     */\n    int deleteById($!pk.shortType $!pk.name);\n\n}\n')])])]),a("h2",{attrs:{id:"serviceimpl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serviceimpl"}},[n._v("#")]),n._v(" ServiceImpl")]),n._v(" "),a("div",{staticClass:"language-config extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, "ServiceImpl"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, ".java"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, "/service/impl"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity;\nimport $!{tableInfo.savePackageName}.dao.I$!{tableInfo.name}Dao;\nimport $!{tableInfo.savePackageName}.service.I$!{tableInfo.name}Service;\nimport org.springframework.stereotype.Service;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nimport javax.annotation.Resource;\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类\n *\n * @author $!author\n * @since $!time.currTime()\n */\n@Service("$!tool.firstLowerCase($!{tableInfo.name})Service")\npublic class $!{tableName} implements I$!{tableInfo.name}Service {\n    @Resource\n    private I$!{tableInfo.name}Dao $!tool.firstLowerCase($!{tableInfo.name})Dao;\n\n    /**\n     * 通过ID查询单条数据\n     *\n     * @param $!pk.name 主键\n     * @return 实例对象\n     */\n    @Override\n    public $!{tableInfo.name}Entity queryById($!pk.shortType $!pk.name) {\n        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryById($!pk.name);\n    }\n\n    /**\n     * 查询所有数据\n     *\n     * @return 对象列表\n     */\n    @Override\n    public List<$!{tableInfo.name}Entity> queryAll(){\n        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryAll();\n    }\n\n    /**\n     * 新增数据\n     *\n     * @param data 实例对象\n     * @return 实例对象\n     */\n    @Override\n    public int insert($!{tableInfo.name}Entity data) {\n        if(data != null){\n            String time = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());\n            data.setCreateTime(time);\n            data.setUpdateTime(time); \n        }\n        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.insert(data);\n    }\n\n    /**\n     * 修改数据\n     *\n     * @param data 实例对象\n     * @return 实例对象\n     */\n    @Override\n    public int update($!{tableInfo.name}Entity data) {\n        if(data != null){\n            String time = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());\n            data.setUpdateTime(time); \n        }\n        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.update(data);\n    }\n\n    /**\n     * 通过主键删除数据\n     *\n     * @param $!pk.name 主键\n     * @return 是否成功\n     */\n    @Override\n    public int deleteById($!pk.shortType $!pk.name) {\n        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.deleteById($!pk.name);\n    }\n}\n')])])])])}),[],!1,null,null,null);e.default=o.exports}}]);