(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{511:function(t,v,_){"use strict";_.r(v);var a=_(6),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"端口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#端口"}},[t._v("#")]),t._v(" 端口")]),t._v(" "),_("h3",{attrs:{id:"端口号"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#端口号"}},[t._v("#")]),t._v(" 端口号")]),t._v(" "),_("p",[t._v("端口就好一个房子的门，是出入这间房子的必经之路")]),t._v(" "),_("p",[t._v("如果一个程序需要"),_("strong",[t._v("收发网络数据")]),t._v("，那么就需要有这样的端口")]),t._v(" "),_("p",[t._v("在linux系统中，端口可以有"),_("strong",[t._v("65536（2的16次方）个之多！")])]),t._v(" "),_("p",[t._v("端口是通过端口号来标记的，端口号只有整数，范围是从"),_("strong",[t._v("0到65535")])]),t._v(" "),_("p",[t._v("注意："),_("strong",[t._v("端口数不一样的linux系统不一样，还可以手动修改")])]),t._v(" "),_("h3",{attrs:{id:"端口是怎样分配的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#端口是怎样分配的"}},[t._v("#")]),t._v(" 端口是怎样分配的")]),t._v(" "),_("p",[t._v("端口号不是随意使用的，而是按照一定的规定进行分配。")]),t._v(" "),_("h3",{attrs:{id:"知名端口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#知名端口"}},[t._v("#")]),t._v(" 知名端口")]),t._v(" "),_("blockquote",[_("p",[t._v("IIS（HTTP）：80")]),t._v(" "),_("p",[t._v("SQLServer：1433")]),t._v(" "),_("p",[t._v("Oracle：1521")]),t._v(" "),_("p",[t._v("MySQL：3306")]),t._v(" "),_("p",[t._v("FTP：21")]),t._v(" "),_("p",[t._v("SSH：22")]),t._v(" "),_("p",[t._v("Tomcat：8080")])]),t._v(" "),_("h3",{attrs:{id:"动态端口（dynamic-ports）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#动态端口（dynamic-ports）"}},[t._v("#")]),t._v(" 动态端口（Dynamic Ports）")]),t._v(" "),_("p",[t._v("动态端口的范围是从"),_("strong",[t._v("1024到65535")])]),t._v(" "),_("p",[t._v("之所以称为动态端口，是因为它一般"),_("strong",[t._v("不固定分配某种服务")]),t._v("，而是动态分配。")]),t._v(" "),_("p",[t._v("动态分配是指当一个系统程序或应用程序程序需要网络通信时，它向主机申请一个端口，主机从可用的端口号中分配一个供它使用。")]),t._v(" "),_("p",[_("strong",[t._v("当这个程序关闭时，同时也就释放了所占用的端口号")])]),t._v(" "),_("h3",{attrs:{id:"小总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#小总结"}},[t._v("#")]),t._v(" 小总结")]),t._v(" "),_("p",[t._v("端口有什么用呢 ？ 我们知道，一台拥有IP地址的主机可以提供许多服务，比如\n"),_("strong",[t._v("HTTP（万维网服务）、FTP（文件传输）、SMTP（电子邮件）等")]),t._v("，\n这些服务完全可以通过"),_("strong",[t._v("1个IP地址来实现。")]),t._v("\n那么，主机是怎样区分不同的网络服务呢？显然不能只靠IP地址，因为"),_("strong",[t._v("IP地址与网络服务的关系是一对多的关系。")]),t._v("\n实际上是通过"),_("strong",[t._v("IP地址+端口号")]),t._v("来区分不同的服务的。\n需要注意的是，端口并不是一一对应的。比如你的电脑作为客户机访问一台WWW服务器时，WWW服务器使用"),_("strong",[t._v("80")]),t._v("端口与你的电脑通信，但你的电脑则可能使用"),_("strong",[t._v("3457")]),t._v("这样的端口。")]),t._v(" "),_("h2",{attrs:{id:"socket简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#socket简介"}},[t._v("#")]),t._v(" Socket简介")]),t._v(" "),_("p",[t._v("网络上的两个程序通过一个双向的通信连接实现数据的交换，这个连接的"),_("strong",[t._v("一端称为一个socket")])]),t._v(" "),_("p",[t._v("建立网络通信连接"),_("strong",[t._v("至少要一对端口号(socket)")]),t._v("。\nsocket本质是"),_("strong",[t._v("编程接口(API)，对TCP/IP的封装")]),t._v("\n，TCP/IP也要提供可供程序员做网络开发所用的接口，这就是"),_("strong",[t._v("Socket编程接口")]),t._v(" "),_("strong",[t._v("HTTP是轿车")]),t._v("，提供了封装或者显示数据的具体形式；"),_("strong",[t._v("Socket是发动机")]),t._v("，提供了网络通信的能力。")]),t._v(" "),_("h2",{attrs:{id:"tcp介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp介绍"}},[t._v("#")]),t._v(" TCP介绍")]),t._v(" "),_("p",[t._v("TCP协议，传输控制协议（英语：Transmission Control Protocol，缩写为 TCP）是一种"),_("strong",[t._v("面向连接的、可靠的、基于字节流的传输层通信协议，由IETF的RFC 793定义")]),t._v("。")]),t._v(" "),_("p",[t._v("TCP通信需要经过"),_("strong",[t._v("创建连接、数据传送、终止连接")]),t._v("三个步骤。")]),t._v(" "),_("p",[t._v("TCP通信模型中，在通信开始之前，一定要先建立相关的链接，才能发送数据，类似于生活中，"),_("strong",[t._v("打电话")])]),t._v(" "),_("h2",{attrs:{id:"tcp特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp特点"}},[t._v("#")]),t._v(" TCP特点")]),t._v(" "),_("h3",{attrs:{id:"面向连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#面向连接"}},[t._v("#")]),t._v(" 面向连接")]),t._v(" "),_("p",[t._v("通信双方必须先建立连接才能进行数据的传输，双方都必须为该连接分配必要的系统内核资源，以管理连接的状态和连接上的传输。")]),t._v(" "),_("p",[t._v("双方间的数据传输都可以通过这一个连接进行。")]),t._v(" "),_("p",[t._v("完成数据交换后，双方必须断开此连接，以释放系统资源。")]),t._v(" "),_("p",[t._v("这种连接是一对一的，"),_("strong",[t._v("因此TCP不适用于广播的应用程序，基于广播的应用程序请使用UDP协议。")])]),t._v(" "),_("h3",{attrs:{id:"可靠传输"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#可靠传输"}},[t._v("#")]),t._v(" 可靠传输")]),t._v(" "),_("p",[_("strong",[t._v("TCP采用发送应答机制")])]),t._v(" "),_("p",[t._v("TCP发送的每个报文段都必须得到接收方的应答才认为这个TCP报文段传输成功")]),t._v(" "),_("p",[_("strong",[t._v("超时重传")])]),t._v(" "),_("p",[t._v("发送端发出一个报文段之后就启动定时器，如果在定时时间内没有收到应答就重新发送这个报文段。")]),t._v(" "),_("p",[t._v("TCP为了保证不发生丢包，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的包发回一个相应的确认（ACK）；如果发送端实体在合理的往返时延（RTT）内未收到确认，那么对应的数据包就被假设为已丢失将会被进行重传。")]),t._v(" "),_("p",[_("strong",[t._v("错误校验")])]),t._v(" "),_("p",[t._v("TCP用一个校验和函数来检验数据是否有错误；在发送和接收时都要计算校验和。")]),t._v(" "),_("p",[_("strong",[t._v("流量控制和阻塞管理")])]),t._v(" "),_("p",[t._v("流量控制用来避免主机发送得过快而使接收方来不及完全收下。")]),t._v(" "),_("h3",{attrs:{id:"tcp短连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp短连接"}},[t._v("#")]),t._v(" TCP短连接")]),t._v(" "),_("blockquote",[_("ol",[_("li",[_("p",[t._v("client 向 server 发起连接请求")])]),t._v(" "),_("li",[_("p",[t._v("server 接到请求，双方建立连接")])]),t._v(" "),_("li",[_("p",[t._v("client 向 server 发送消息")])]),t._v(" "),_("li",[_("p",[t._v("server 回应 client")])])]),t._v(" "),_("p",[_("strong",[t._v("一次读写完成，此时双方任何一个都可以发起 close 操作")])])]),t._v(" "),_("p",[t._v("操作步骤：")]),t._v(" "),_("div",{staticClass:"language-python extra-class"},[_("pre",{pre:!0,attrs:{class:"language-python"}},[_("code",[t._v("建立连接——数据传输——关闭连接"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("建立连接——数据传输——关闭连接\n")])])]),_("p",[_("a",{attrs:{"data-fancybox":"",title:"短连接.png",href:"https://i.loli.net/2019/01/16/5c3ea7c8d477b.png"}},[_("img",{attrs:{src:"https://i.loli.net/2019/01/16/5c3ea7c8d477b.png",alt:"短连接.png"}})])]),t._v(" "),_("h3",{attrs:{id:"tcp长连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp长连接"}},[t._v("#")]),t._v(" TCP长连接")]),t._v(" "),_("blockquote",[_("ol",[_("li",[_("p",[t._v("client 向 server 发起连接")])]),t._v(" "),_("li",[_("p",[t._v("server 接到请求，双方建立连接")])]),t._v(" "),_("li",[_("p",[t._v("client 向 server 发送消息")])]),t._v(" "),_("li",[_("p",[t._v("server 回应 client")])])]),t._v(" "),_("p",[_("strong",[t._v("一次读写完成，连接不关闭")])])]),t._v(" "),_("p",[t._v("操作步骤：")]),t._v(" "),_("div",{staticClass:"language-python extra-class"},[_("pre",{pre:!0,attrs:{class:"language-python"}},[_("code",[t._v("建立连接——数据传输"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("（保持连接）"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("数据传输——关闭连接\n")])])]),_("p",[_("a",{attrs:{"data-fancybox":"",title:"长连接.png",href:"https://i.loli.net/2019/01/16/5c3ea82118ea3.png"}},[_("img",{attrs:{src:"https://i.loli.net/2019/01/16/5c3ea82118ea3.png",alt:"长连接.png"}})])]),t._v(" "),_("h3",{attrs:{id:"tcp长-短连接的优点和缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp长-短连接的优点和缺点"}},[t._v("#")]),t._v(" TCP长/短连接的优点和缺点")]),t._v(" "),_("p",[_("strong",[t._v("长连接")]),t._v("可以省去较多的TCP建立和关闭的操作，"),_("strong",[t._v("减少浪费，节约时间")]),t._v("。")]),t._v(" "),_("p",[t._v("对于频繁请求资源的客户来说，较适用长连接。")]),t._v(" "),_("p",[t._v("client与server之间的连接如果一直不关闭的话，会存在一个问题，")]),t._v(" "),_("p",[t._v("随着客户端连接越来越多，server早晚有扛不住的时候，这时候server端需要采取一些策略，")]),t._v(" "),_("p",[t._v("如关闭一些长时间没有读写事件发生的连接，这样可以避免一些恶意连接导致server端服务受损；")]),t._v(" "),_("p",[t._v("如果条件再允许就可以以客户端机器为颗粒度，限制每个客户端的最大长连接数，")]),t._v(" "),_("p",[t._v("这样可以完全避免某个蛋疼的客户端连累后端服务。")]),t._v(" "),_("p",[t._v("短连接对于服务器来说管理较为简单，存在的连接都是有用的连接，不需要额外的控制手段。\n但如果客户请求频繁，将在TCP的建立和关闭操作上"),_("strong",[t._v("浪费时间和带宽。")])]),t._v(" "),_("h2",{attrs:{id:"tcp三次握手四次挥手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp三次握手四次挥手"}},[t._v("#")]),t._v(" TCP三次握手四次挥手")]),t._v(" "),_("p",[_("a",{attrs:{"data-fancybox":"",title:"三次握手、四次挥手.png",href:"https://i.loli.net/2018/12/25/5c22338547ebb.png"}},[_("img",{attrs:{src:"https://i.loli.net/2018/12/25/5c22338547ebb.png",alt:"三次握手、四次挥手.png"}})])]),t._v(" "),_("h2",{attrs:{id:"tcp-ip协议-族"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip协议-族"}},[t._v("#")]),t._v(" TCP/IP协议(族)")]),t._v(" "),_("p",[t._v("早期的计算机网络，都是由各厂商自己规定一套协议，"),_("strong",[t._v("IBM、Apple和Microsoft都有各自的网络协议，互不兼容")])]),t._v(" "),_("p",[t._v("为了把全世界的所有不同类型的计算机都连接起来，就必须规定一套"),_("strong",[t._v("全球通用")]),t._v("的协议，为了实现互联网这个目标，"),_("strong",[t._v("互联网协议族（Internet Protocol Suite）就是通用协议标准。")])]),t._v(" "),_("p",[t._v("因为互联网协议包含了上百种协议标准，但是最重要的两个协议是TCP和IP协议，所以，大家把互联网的协议简称"),_("strong",[t._v("TCP/IP协议(族)")])]),t._v(" "),_("p",[t._v("常用的网络协议如下图所示：")]),t._v(" "),_("p",[_("a",{attrs:{"data-fancybox":"",title:"TCP-IP协议族中各协议之间的关系.jpg",href:"https://i.loli.net/2019/01/16/5c3eac46311d5.jpg"}},[_("img",{attrs:{src:"https://i.loli.net/2019/01/16/5c3eac46311d5.jpg",alt:"TCP-IP协议族中各协议之间的关系.jpg"}})]),t._v(" "),_("a",{attrs:{"data-fancybox":"",title:"1355668682_9897.jpg",href:"https://i.loli.net/2019/01/16/5c3eac459ca60.jpg"}},[_("img",{attrs:{src:"https://i.loli.net/2019/01/16/5c3eac459ca60.jpg",alt:"1355668682_9897.jpg"}})])]),t._v(" "),_("blockquote",[_("p",[t._v("网际层也称为："),_("strong",[t._v("网络层")])]),t._v(" "),_("p",[t._v("网络接口层也称为："),_("strong",[t._v("链路层")])])]),t._v(" "),_("p",[_("strong",[t._v("OSI参考模型")])]),t._v(" "),_("p",[_("a",{attrs:{"data-fancybox":"",title:"OSI参考模型.png",href:"https://i.loli.net/2019/01/16/5c3eacb83cc5a.png"}},[_("img",{attrs:{src:"https://i.loli.net/2019/01/16/5c3eacb83cc5a.png",alt:"OSI参考模型.png"}})])])])}),[],!1,null,null,null);v.default=s.exports}}]);