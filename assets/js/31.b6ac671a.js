(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{533:function(t,s,a){"use strict";a.r(s);var e=a(6),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("ul",[a("li",[t._v("Servlet就是一个"),a("strong",[t._v("接口")]),t._v("，定义了"),a("strong",[t._v("Java类被浏览器访问到(tomcat识别)的规则")])]),t._v(" "),a("li",[t._v("自己定义一个类，"),a("strong",[t._v("实现Servlet接口")]),t._v("，重写方法就可以被tomcat所识别")])]),t._v(" "),a("h2",{attrs:{id:"servlet实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servlet实现方式"}},[t._v("#")]),t._v(" Servlet实现方式")]),t._v(" "),a("ol",[a("li",[t._v("实现"),a("strong",[t._v("Servlet接口")]),t._v("，"),a("strong",[t._v("实现接口中的抽象方法")])]),t._v(" "),a("li",[t._v("继承"),a("strong",[t._v("GenericServlet抽象类")]),t._v("，"),a("strong",[t._v("重写service()方法")])]),t._v(" "),a("li",[t._v("继承"),a("strong",[t._v("HttpServlet抽象类")]),t._v(" HttpServlet继承于GenericServlet，"),a("strong",[t._v("重写doGet()，doPost()方法")])])]),t._v(" "),a("h3",{attrs:{id:"实现servlet接口使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现servlet接口使用"}},[t._v("#")]),t._v(" 实现Servlet接口使用")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("创建JavaEE项目")])]),t._v(" "),a("li",[a("strong",[t._v("定义一个类，实现Servlet接口")])]),t._v(" "),a("li",[a("strong",[t._v("实现接口中的抽象方法")])]),t._v(" "),a("li",[a("strong",[t._v("配置Servlet")])])]),t._v(" "),a("h3",{attrs:{id:"继承httpservlet抽象类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承httpservlet抽象类"}},[t._v("#")]),t._v(" 继承HttpServlet抽象类")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("创建JavaEE项目")])]),t._v(" "),a("li",[a("strong",[t._v("定义一个类，继承HttpServlet抽象类")])]),t._v(" "),a("li",[a("strong",[t._v("重写doGet()，doPost()方法")])]),t._v(" "),a("li",[a("strong",[t._v("配置Servlet")])])]),t._v(" "),a("h3",{attrs:{id:"配置servlet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置servlet"}},[t._v("#")]),t._v(" 配置Servlet")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[t._v('"在web.xml里面配置"\n\n'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("TestServlet"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("io.jtxyh.TestServlet"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("TestServlet"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/demo"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 指定Servlet创建的时机 --\x3e")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("load-on-startup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("load-on-startup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"执行原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行原理"}},[t._v("#")]),t._v(" 执行原理")]),t._v(" "),a("ol",[a("li",[t._v("当服务器接受到客户端浏览器的请求后，会解析请求URL路径，获取访问的Servlet的资源路径")]),t._v(" "),a("li",[t._v("查找"),a("strong",[t._v("web.xml")]),t._v("文件，是否有"),a("strong",[t._v("对应的<url-pattern>标签体内容")]),t._v("。")]),t._v(" "),a("li",[t._v("如果有，则在找到对应的**<servlet-class>全类名**")]),t._v(" "),a("li",[t._v("tomcat会将字节码文件"),a("strong",[t._v("加载进内存，并且创建其对象")])]),t._v(" "),a("li",[a("strong",[t._v("调用其方法")]),t._v(" "),a("a",{attrs:{"data-fancybox":"",title:"Servlet执行原理.png",href:"https://i.loli.net/2019/10/19/eWIQG8xFut512Z3.png"}},[a("img",{attrs:{src:"https://i.loli.net/2019/10/19/eWIQG8xFut512Z3.png",alt:"Servlet执行原理.png"}})])])]),t._v(" "),a("h2",{attrs:{id:"servlet中的生命周期方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servlet中的生命周期方法"}},[t._v("#")]),t._v(" Servlet中的生命周期方法")]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"Servlet生命周期.png",href:"https://i.loli.net/2019/10/19/GSw82L4cqHv3Fem.png"}},[a("img",{attrs:{src:"https://i.loli.net/2019/10/19/GSw82L4cqHv3Fem.png",alt:"Servlet生命周期.png"}})])]),t._v(" "),a("h3",{attrs:{id:"被创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#被创建"}},[t._v("#")]),t._v(" 被创建")]),t._v(" "),a("p",[a("strong",[t._v("执行init方法，只执行一次")])]),t._v(" "),a("ul",[a("li",[t._v("默认情况下，第一次被访问时，"),a("strong",[t._v("Servlet被创建")])]),t._v(" "),a("li",[t._v("可以配置执行Servlet的创建时机。\n"),a("ul",[a("li",[t._v("在**<servlet>标签下配置**\n"),a("ol",[a("li",[t._v("第一次被访问时，创建**<load-on-startup>的值为负数**")]),t._v(" "),a("li",[t._v("在服务器启动时，创建**<load-on-startup>的值为0或正整数**")])])])])]),t._v(" "),a("li",[t._v("Servlet的init方法，"),a("strong",[t._v("只执行一次")]),t._v("，说明一个Servlet在内存中"),a("strong",[t._v("只存在一个对象，Servlet是单例的")]),t._v(" "),a("ul",[a("li",[t._v("多个用户同时访问时，可能"),a("strong",[t._v("存在线程安全问题")]),t._v("。")]),t._v(" "),a("li",[t._v("解决："),a("strong",[t._v("尽量不要在Servlet中定义成员变量")]),t._v("。即使定义了成员变量，也不要对修改值")])])])]),t._v(" "),a("h3",{attrs:{id:"提供服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提供服务"}},[t._v("#")]),t._v(" 提供服务")]),t._v(" "),a("p",[a("strong",[t._v("执行service方法，执行多次")])]),t._v(" "),a("ul",[a("li",[t._v("每次访问Servlet时，Service方法都会被调用一次。")])]),t._v(" "),a("h3",{attrs:{id:"被销毁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#被销毁"}},[t._v("#")]),t._v(" 被销毁")]),t._v(" "),a("p",[t._v("执行"),a("strong",[t._v("destroy方法，只执行一次")])]),t._v(" "),a("ul",[a("li",[t._v("Servlet被销毁时执行。服务器关闭时，Servlet被销毁")]),t._v(" "),a("li",[t._v("只有服务器"),a("strong",[t._v("正常关闭时，才会执行destroy方法")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("destroy方法")]),t._v("在Servlet被销毁之前执行，一般用于"),a("strong",[t._v("释放资源")])])]),t._v(" "),a("h2",{attrs:{id:"servlet3-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servlet3-0"}},[t._v("#")]),t._v(" Servlet3.0")]),t._v(" "),a("ul",[a("li",[t._v("好处：\n"),a("ul",[a("li",[t._v("支持"),a("strong",[t._v("注解配置")]),t._v("。可以不需要web.xml了。")])])]),t._v(" "),a("li",[t._v("步骤：\n"),a("ol",[a("li",[t._v("创建JavaEE项目，选择Servlet的版本3.0以上，"),a("em",[t._v("可以不创建web.xml")])]),t._v(" "),a("li",[t._v("定义一个类，实现Servlet接口")]),t._v(" "),a("li",[t._v("复写方法")]),t._v(" "),a("li",[t._v("在类上使用**@WebServlet注解**，进行配置\n"),a("ul",[a("li",[a("strong",[t._v('@WebServlet("资源路径")')])])])])])])]),t._v(" "),a("h2",{attrs:{id:"servlet相关配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servlet相关配置"}},[t._v("#")]),t._v(" Servlet相关配置")]),t._v(" "),a("ul",[a("li",[t._v("urlpartten:Servlet访问路径\n"),a("ol",[a("li",[t._v("一个Servlet可以"),a("strong",[t._v("定义多个访问路径")]),t._v('：@WebServlet({"资源路径1","资源路径2","资源路径3"})')]),t._v(" "),a("li",[t._v("路径定义规则：\n"),a("ol",[a("li",[a("strong",[t._v("/xxx")]),t._v("：路径匹配")]),t._v(" "),a("li",[a("strong",[t._v("/xxx/xxx")]),t._v(":多层路径，目录结构")]),t._v(" "),a("li",[a("strong",[t._v(".do")]),t._v("：扩展名匹配")])])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);